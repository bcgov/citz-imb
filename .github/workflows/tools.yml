# @format

name: Tools Deploy
on:
  workflow_dispatch:
    inputs:
      APP_NAME:
        description: the name of the app
        required: true
        type: string
      OS:
        description: the os to use for the action
        required: false
        type: string
        default: ubuntu-latest
      ENVIRONMENT:
        description: the deployment environment
        required: false
        type: string
        default: dev
      TAG:
        description: the image tag
        required: false
        type: string
        default: latest
    secrets:
      OPENSHIFT_SERVER:
        required: true
      OPENSHIFT_TOKEN:
        required: true
      OPENSHIFT_NAMESPACE:
        required: true
      TEAM_HOOK:
        required: true
jobs:
  Deploy:
    name: deploy api
    runs-on: ubuntu-latest
    environment: ${{ ENVIRONMENT }}

    steps:
      - name: Check out Repository
        uses: actions/checkout@v2

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Deploy to OpenShift
        run: |
          oc apply -f ./openshift/deploy-api.yml -p APP_NAME=${{ APP_NAME }} -p NAMESPACE=${{ secrets.OPENSHIFT_NAMESPACE }} -p TAG=c67ec21 -p PORT=3333
          ls -l

      # - name: Verify web
      #   if: endsWith(matrix.APPS.name,'app')
      #   id: verify-web
      #   uses: nick-invision/retry@v2.2.0
      #   with:
      #     timeout_seconds: 5
      #     retry_wait_seconds: 10
      #     max_attempts: 100
      #     warning_on_retry: false
      #     command: curl -sSfLi ${{ steps.deploy-and-expose.outputs.route }}

      # - name: Send Notification to Teams
      #   if: endsWith(matrix.APPS.name,'app') && inputs.ENVIRONMENT != 'dev'
      #   uses: thechetantalwar/teams-notify@v2
      #   with:
      #     teams_webhook_url: ${{ secrets.TEAM_HOOK }}
      #     message: '${{ matrix.APPS.name }} successfully deployed to ${{ inputs.ENVIRONMENT }}.  ${{ steps.deploy-and-expose.outputs.route }}'
