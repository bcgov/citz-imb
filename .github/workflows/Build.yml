# @format

name: Build
on:
  workflow_call:
    inputs:
      MATRIX_INCLUDE:
        required: true
        type: string
      OS:
        required: false
        type: string
        default: ubuntu-latest
      TAG:
        required: false
        type: string
        default: latest
    outputs:
      registry-path:
        value: ${{ jobs.Build.outputs.registry-path }}

jobs:
  Build:
    name: ${{ matrix.APP }}-${{ matrix.APP-TYPE.NAME }}
    runs-on: ${{ inputs.OS }}
    outputs:
      registry-path: ${{ steps.push-image.outputs.registry-path }}
      image: ${{ steps.build-image.outputs.image }}
      tags: ${{ steps.build-image.outputs.tags }}
    strategy:
      matrix: ${{fromJSON(inputs.MATRIX_INCLUDE)}}

    steps:
      - name: Check out Repository
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Cache node modules
        id: npmCacheStep
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ secrets.CACHE_VERSION }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install packages
        if: steps.npmCacheStep.outputs.cache-hit != 'true'
        run: npm install --production --silent

      - name: Install Nx package
        run: npm install @nrwl/cli --silent

      - name: Build application
        run: npx nx build ${{ matrix.APP }}-${{ matrix.APP-TYPE.NAME }}

      - name: Build container
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ matrix.APP }}-${{ matrix.APP-TYPE.NAME }}
          tags: ${{ inputs.TAG }}
          containerfiles: ./apps/${{ matrix.APP }}/${{ matrix.APP-TYPE.NAME }}/Dockerfile

      - name: Push to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
