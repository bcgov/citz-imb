# @format

name: Deploy
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
        required: false
        default: 'tools'
      APP_NAME:
        required: true
        type: string
      PORT:
        required: false
        type: number
        default: 8080
      REGISTRY_PATH:
        required: true
        type: string
      SHORT_SHA:
        required: false
        type: string
        default: ''

    secrets:
      OPENSHIFT_SERVER:
        required: true
      OPENSHIFT_TOKEN:
        required: true
      OPENSHIFT_NAMESPACE:
        required: true

env:
  SHA: ${{ github.ENVIRONMENT }}

jobs:
  Deploy:
    name: Deploy to ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Deploy
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ inputs.APP_NAME }}
          image: ${{ inputs.REGISTRY_PATH }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          port: ${{ inputs.PORT }}

      - name: Apply Labels
        run: |
          echo "app_name: ${{ input.APP_NAME }}"
          oc label pod -l deployment=${{ input.APP_NAME }} role=frontend

      # Perform a (very) basic integration test.
      # This step is retried since the time to pull the image and start the pod can vary.
      - name: Test project is running
        id: test-project
        uses: nick-invision/retry@v2.2.0
        with:
          timeout_seconds: 5
          retry_wait_seconds: 10
          max_attempts: 100
          warning_on_retry: false
          # Just check that the root endpoint returns a success status (-f flag).
          command: curl -sSfLi ${{ steps.deploy-and-expose.outputs.route }}
