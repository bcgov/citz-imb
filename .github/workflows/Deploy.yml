# @format

name: Deploy
on:
  workflow_call:
    inputs:
      MATRIX_INCLUDE:
        required: true
        type: string
      OS:
        required: false
        type: string
        default: ubuntu-latest
      ENVIRONMENT:
        required: false
        type: string
        default: dev
      TAG:
        required: false
        type: string
        default: latest
    secrets:
      OPENSHIFT_SERVER:
        required: true
      OPENSHIFT_TOKEN:
        required: true
      OPENSHIFT_NAMESPACE:
        required: true
      TEAM_HOOK:
        required: true

jobs:
  Deploy:
    name: ${{ matrix.APP }}-${{ matrix.APP-TYPE.NAME }}
    runs-on: ${{ inputs.OS }}
    strategy:
      matrix: ${{fromJSON(inputs.MATRIX_INCLUDE)}}
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
      - name: Check out Repository
        uses: actions/checkout@v2

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}

      - name: Deploy to OpenShift
        run: oc process -f ./openshift/deploy-${{ matrix.APP-TYPE.NAME }}-template.yml -p APP_NAME=${{ matrix.APP }} -p NAMESPACE=${{ secrets.OPENSHIFT_NAMESPACE }} -p TAG=${{ inputs.TAG }} -p PORT=${{ matrix.APP-TYPE.PORT }} | oc apply -f -

      - name: Verify web
        id: verify-web
        uses: nick-invision/retry@v2.2.0
        with:
          timeout_seconds: 5
          retry_wait_seconds: 10
          max_attempts: 100
          warning_on_retry: false
          command: curl -sSfLi ${{ matrix.APP }}-${{ secrets.OPENSHIFT_NAMESPACE }}.apps.silver.devops.gov.bc.ca

      - name: Send Notification to Teams
        if: inputs.ENVIRONMENT != 'dev'
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.TEAM_HOOK }}
          message: '${{ matrix.APP }}-${{ matrix.APP-TYPE.NAME }} successfully deployed to ${{ inputs.ENVIRONMENT }}.  ${{ steps.deploy-and-expose.outputs.route }}'
